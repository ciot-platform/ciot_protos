syntax = "proto3";

package Ciot;

// Enum representing different types of system requests.
enum SysReqCmd {
  SYS_REQ_CMD_UNKOWN = 0;   // Unknown system request type.
  SYS_REQ_CMD_RESTART = 1;  // System restart request.
  SYS_REQ_CMD_INIT_DFU = 2; // System init DFU bootloader
}

// Enum representing hardware version
enum SysHw {
  SYS_HW_UNKNOWN = 0; // Unknown hardware
  SYS_HW_ESP8266 = 1; // ESP8266
  SYS_HW_ARDUINO = 2; // Arduino Board
  SYS_HW_ESP32 = 3;   // ESP32
  SYS_HW_NRF51 = 4;   // NRF51
  SYS_HW_NRF52 = 5;   // NRF52
  SYS_HW_LINUX = 6;   // Linux device
  SYS_HW_WIN32 = 7;   // Windows device
}

// Message used to stop system interface
message SysStop {}

// Message representing configuration for the system.
message SysCfg {}

// Message representing system features.
message SysFeatures {
  bool ntp = 1;           // NTP feature.
  bool dfu = 2;           // DFU feature
  bool ota = 3;           // OTA (Over-the-Air update) feature.
  bool http_client = 4;   // HTTP client feature.
  bool http_server = 5;   // HTTP server feature.
  bool mqtt_client = 6;   // MQTT client feature.
  bool timer = 7;         // Timer feature.
  bool storage = 8;       // Storage feature.
  bool sys = 9;           // System feature.
  bool uart = 10;         // UART feature.
  bool usb = 11;          // USB feature.
  bool ethernet = 12;     // Ethernet feature.
  bool wifi = 13;         // WiFi feature.
  bool ble_scn = 14;      // Bluetooth Low Energy (BLE) Scanner feature.
  bool gpio = 15;         // GPIO feature
}

// Message representing system information.
message SysInfo {
  bytes app_ver = 1;        // Application version.
  string hw_name = 2;       // Hardware name.
  SysHw hw_type = 3;        // Hardware type.
  SysFeatures features = 4; // System features.
}

// Message representing system status.
message SysStatus {
  uint32 reset_reason = 1; // Reason for the last reset.
  uint32 reset_count = 2;  // Number of resets.
  uint32 free_memory = 3;  // Amount of free memory.
  uint32 lifetime = 4;     // Lifetime of the system.
}

// Message representing a system request.
message SysReq {
  oneof type {
    SysReqCmd cmd = 1; // System command
  }
}

// Message representing data for the system.
message SysData {
  oneof type {
    SysStop stop = 1;
    SysCfg config = 2;    // Configuration for the system.
    SysStatus status = 3; // Status of the system.
    SysReq request = 4;   // System request data.
    SysInfo info = 5;     // System info.
  }
}

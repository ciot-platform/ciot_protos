syntax = "proto3";

package Ciot;

import "ciot/proto/v2/errors.proto";

option csharp_namespace = "Ciot.Protos.V2";

// Possible ble scanner states
enum BleScnState {
  // Idle state
  BLE_SCN_STATE_IDLE = 0;
  // Passive scan enabled
  BLE_SCN_STATE_PASSIVE = 1;
  // Active scan enabled
  BLE_SCN_STATE_ACTIVE = 2;
}

// Ble scanner stop message
message BleScnStop {}

// Ble scanner configuration
message BleScnCfg {
  // Scanner interval
  uint32 interval = 1;
  // Scanner window
  uint32 window = 2;
  // Scanner timeout
  uint32 timeout = 3;
  // Enable/disable active scan mode
  bool active = 4;
  // Enable/disable bridge. On bridge mode ciot lib dosen't interpret adv
  // messages as an CioT requests and send all of them to the main application
  // as an data message.
  bool bridge_mode = 5;
}

// Ble scanner advertisement information
message BleScnAdvInfo {
  // Device mac
  bytes mac = 1;
  // Signal strenght
  int32 rssi = 2;
}

// Ble scanner advertisement
message BleScnAdv {
  // Advertisement information
  BleScnAdvInfo info = 1;
  // Advertisement payload
  bytes payload = 2;
}

// Ble scanner status
message BleScnStatus {
  // Current state
  BleScnState state = 1;
  // Current error code
  Err err_code = 2;
  // ADVs counter
  int32 advs_losted = 3;
  // Current fifo lenght
  int32 fifo_len = 4;
  // Fifo maximum size
  int32 fifo_max = 5;
}

// Ble scanner request
message BleScnReq { }

// Ble scanner data
message BleScnData {
  oneof type {
    // Stop ble scanner interface
    BleScnStop stop = 1;
    // Configuration
    BleScnCfg config = 2;
    // Status
    BleScnStatus status = 3;
    // Request
    BleScnReq request = 4;
  }
}
